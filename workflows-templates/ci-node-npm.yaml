on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches: [$default-branch]

jobs:
  prepare:
    name: prepare ci job
    id: prepare
    runs-on: ubuntu-latest
    outputs:
      package-json-paths: ${{ steps.search-package-json.outputs.paths }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: npm
          cache-dependency-path: "**/package-lock.json"
          registry-url: "https://npm.pkg.github.com/"
      - name: search package.json
        id: search-package-json
        run: |
          paths='${{ toJSON(find ./ -name package.json ! -path "**/node_modules/**") }}'
          echo ::set-output name=paths::${paths}
  prepare-result:
    runs-on: ubuntu-latest
    needs:
      - prepare
    steps:
      - name: Echo previous outputs
        run: echo "${{ toJSON(needs.prepare.outputs) }}"
  continuous-integration:
    runs-on: ubuntu-latest
    needs:
      - prepare
      - prepare-result
    strategy:
    matrix:
      path: ${{ fromJSON(needs.prepare.outputs.paths) }}
    steps:
      - name: Matrix path => (${{ matrix.path }})
        run: |
          echo ${{ matrix.path }}
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: npm
          cache-dependency-path: "**/package-lock.json"
          registry-url: "https://npm.pkg.github.com/"
      - name: install
        run: |
          cd ${{ matrix.path }}
          npm install
      - name: lint
        run: |
          cd ${{ matrix.path }}
          npm run lint
      - name: build
        run: |
          cd ${{ matrix.path }}
          npm run build
      - name: test
        run: |
          cd ${{ matrix.path }}
          npm run test
